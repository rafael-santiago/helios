local function vc_environ_merge(filepath type string) : result type int {
	var cur_env type list;
	var exit_code type int;
	$cur_env = hefesto.sys.lines_from_file($filepath, ".*$");
	if ($cur_env.count() == 0) {
		result 1;
	}
	var c type int;
	$c = 0;
	$exit_code = 0;
	while ($c < $cur_env.count() && $exit_code == 0) {
		var vname type string;
		var value type string;
		var line type string;
		$line = $cur_env.item($c);
		$line.replace("=.*$", "");
		$vname = $line;
		$line = $cur_env.item($c);
		var regex type string;
		$regex = "^" + $vname + "=";
		$line.replace($regex, "");
		$value = $line;
		$exit_code = hefesto.sys.setenv($vname, $value);
		$c = $c + 1;
	}
	$exit_code = hefesto.sys.rm($filepath);
	result $exit_code;
}

function vc_setup(vcvarsall_filepath type string, hwtype type string) : result type int {
	var exit_code type int;
	var command_line type string;
	var allowed_hwtypes type list;
	$allowed_hwtypes.add_item("x86");
	$allowed_hwtypes.add_item("amd64");
	$allowed_hwtypes.add_item("arm");
	$allowed_hwtypes.add_item("x86_amd64");
	$allowed_hwtypes.add_item("x86_arm");
	if ($hwtype.len() == 0) {
		var cpu_arch_option type list;
		$cpu_arch_option = hefesto.sys.get_option("cpu-arch");
		if ($cpu_arch_option.count() > 0) {
			$hwtype = $cpu_arch_option.item(0);
		}
	}
	if ($hwtype.len() > 0 && $allowed_hwtypes.index_of($hwtype) == -1) {
		hefesto.sys.echo(hefesto.project.toolset() + " fatal error: unknown processor architecture: \"" + $hwtype + "\". ");
        hefesto.sys.echo("CLUE: possible values to --cpu-arch option should be: x86 | amd64 | arm | x86_amd64 | x86_arm | or empty.\n");
		result 1;
	}
	$command_line = "\"" + $vcvarsall_filepath + "\" " + $hwtype + " & set > .vcvarsall_out.cfg";
	$exit_code = hefesto.sys.run($command_line);
	if ($exit_code == 0) {
		$exit_code = vc_environ_merge(".vcvarsall_out.cfg");
	}
	result $exit_code;
}

#function vspath_exists(path type string) : result type int
#{
#    var old_pwd type string;
#    $old_pwd = hefesto.sys.pwd();
#    hefesto.sys.cd($path);
#    var exists type int;
#    $exists = (hefesto.sys.pwd() == $path ||
#               hefesto.sys.pwd() == ($path + "\\"));    
#    hefesto.sys.cd($old_pwd);
#    result $exists;
#}

#function get_cpu_architecture() : result type string
#{
#    var cpu_arch type list;
#    $cpu_arch = hefesto.sys.get_option("cpu-arch");
#    if ($cpu_arch.count() > 0) {
#        result $cpu_arch.item(0);
#    }
#    var arch_from_reg type string;
#    $arch_from_reg = hefesto.sys.env("WINREG:HKLM\\System\\CurrentControlSet\\Control\\Session Manager\\Environment\\PROCESSOR_ARCHITECTURE");
#    if ($arch_from_reg != "x86") {
#        $arch_from_reg = "x64";
#    }
#    result $arch_from_reg;
#}
