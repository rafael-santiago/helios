#
#                              Copyright (C) 2013 by Rafael Santiago
#
# This is free software. You can redistribute it and/or modify under
# the terms of the GNU General Public License version 2.
#
# "common.hsl"
#

include ~/fsutil.hsl

function gcc_mk_gcc_incl_str_opt(includes type list) : result type string {
    var include_list type string;
    var size type int;
    var i type int;
    $size = $includes.count();
    $i = 0;
    $include_list = " ";
    while ($i < $size) {
        $include_list = $include_list + "-I" + $includes.item($i) + " ";
        $i = $i + 1;
    }
    result $include_list;
}

function gcc_mk_gcc_lib_str_opt(libraries type list) : result type string {
    var libraries_list type string;
    var size type int;
    var i type int;
    $size = $libraries.count();
    $i = 0;
    $libraries_list = " ";
    while ($i < $size) {
        $libraries_list = $libraries_list + "-L" + $libraries.item($i) + " ";
        $i = $i + 1;
    }
    result $libraries_list;
}

function gcc_mk_ofile_name(source type string, obj_dir type string) : result type string {
    var ofile type string;
    var i type int;
    var size type int;
    $ofile = "";
    $size = $source.len();
    $i = 0;
    while ($size > 0 && $source.at($size) != ".") {
        $size = $size - 1;
    }
    while ($i < $size) {
        $ofile = $ofile + $source.at($i);
        $i = $i + 1;
    }
    $ofile = $ofile + ".o";
    #hefesto.sys.make_path($obj_dir, $ofile + ".o"); da null ap.
    result hefesto.sys.make_path($obj_dir, $ofile);
}

function gcc_mk_ofiles_str_opt(sources type list, obj_dir type string) : result type string {
    var size type int;
    var s type int;
    var src type string;
    var ofiles type string;
    $ofiles = "";
    $s = 0;
    $size = $sources.count();
    while ($s < $size) {
        $src = $sources.item($s);
        $ofiles = $ofiles + " " + gcc_mk_ofile_name(filenamefrompath($src), $obj_dir);
        $s = $s + 1;
    }
    result $ofiles;
}

function gcc_mk_raw_str_opt(options type list) : result type string {
    var options_list type string;
    var size type int;
    var i type int;
    $size = $options.count();
    $i = 0;
    $options_list = " ";
    while ($i < $size) {
        $options_list = $options_list + " " + $options.item($i) + " ";
        $i = $i + 1;
    }
    result $options_list;
}

function gcc_file_exists(filepath type string) : result type string {
    var old_cwd type string;
    var exists type int;
    var filecwd type string;
    var f type int;
    var fs type int;
    $exists = 0;
    $old_cwd = hefesto.sys.pwd();
    $fs = $filepath.len() - 1;
    while ($fs > 0) {
        if (hefesto.sys.os_name() == "windows") {
            if ($filepath.at($fs) == "\\" || $filepath.at($fs) == "/") break;
        } else if (hefesto.sys.os_name() == "linux" || hefesto.sys.os_name() == "freebsd") {
            if ($filepath.at($fs) == "/") break;
        }
        $fs = $fs - 1;
    }
    $f = 0;
    while ($f < $fs) {
        $filecwd = $filecwd + $filepath.at($f);
        $f = $f + 1;
    }
    if (hefesto.sys.cd($filecwd) == 0) {
        $fs = $fs + 1;
        $filecwd = "";
        while ($fs < $filepath.len()) {
            if ($filepath.at($f) != ".") {
                $filecwd = $filecwd + $filepath.at($f);
            } else {
                $filecwd = $filecwd + "\\" + $filepath.at($f);
            }
            $fs = $fs + 1;
        }
        $filecwd = $filecwd + "$";
        $exists = hefesto.sys.ls($filecwd);
    }
    hefesto.sys.cd($old_cwd);
    result $exists;
}

function gcc_mk_regex_pattern_from_filepath(filepath type string) : result type string {
    var retval type string;
    $retval = "^" + $filepath + "$";
    $retval.replace("\\\\", "\\\\");
    $retval.replace("\\.", "\\.");
    result $retval;
}