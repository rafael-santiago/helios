#                                        Sat Oct 22 00:08:55 2016
# "mkkld.hsl"
#
#       by Rafael Santiago
#
#

function mkkld(main_file type string,
               includes type list,
               cflags type list,
               libraries type list,
               ldflags type list,
               modname type string) : result type int {
    var exit_code type int;
    var data type string;
    var sources type list;

    $exit_code = 0;

    $sources.ls(".*\\.c$");

    if ($includes.count() > 0 || $cflags.count() > 0) {
        $data = "CFLAGS+=";

        append_to_cmd_buffer($data, "-I", $includes);

        get_addl_impl_files($sources, $includes);

        append_to_cmd_buffer($data, "", $cflags);

        $data = $data + "\n";
    }

    if ($libraries.count() > 0 || $ldflags.count() > 0) {
        $data = "LDFLAGS+=";

        append_to_cmd_buffer($data, "-L", $libraries);

        append_to_cmd_buffer($data, "", $ldflags);

        $data = $data + "\n";
    }

    $data = $data + "KMOD= " + $modname + "\n";

    # INFO(Santiago): The main_file is just for keeping the forge function interface compatible with the Linux LKM toolset...

    $data = $data + "SRCS= ";

    append_to_cmd_buffer($data, "", $sources);

    $data = $data + "\n.include <bsd.kmod.mk>\n";

    var makefile type file;
    $makefile = hefesto.sys.fopen("Makefile", "w");
    hefesto.sys.fwrite($data, $data.len(), $makefile);
    hefesto.sys.fclose($makefile);

    $exit_code = hefesto.sys.run(hefesto.toolset.mk());

    remove_temp_files();

    result $exit_code;
}

local function get_addl_impl_files(sources type list, dirs type list) : result type none {
    var cwd type string;
    $cwd = hefesto.sys.pwd();

    var dir type string;
    var d type int;

    $d = 0;
    while ($d < $dirs.count()) {
        $dir = $dirs.item($d);

        if (hefesto.sys.cd($dir)) {
            $sources.ls(".*\\.c$");
        }

        $d = $d + 1;
    }

    hefesto.sys.cd($cwd);

    hefesto.sys.byref($sources);
}

local function append_to_cmd_buffer(buf type string, prepend_cmd type string, options type list) : result type none {
    var o type int;

    $o = 0;
    while ($o < $options.count()) {
        $buf = $buf + " " + $prepend_cmd + $options.item($o);
        $o = $o + 1;
    }

    hefesto.sys.byref($buf);
}

local function remove_temp_files() : result type none {
    hefesto.sys.rm("Makefile");
}
